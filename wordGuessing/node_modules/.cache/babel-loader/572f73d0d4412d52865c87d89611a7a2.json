{"ast":null,"code":"var _jsxFileName = \"/Users/gavinsakamoto/Projects/wordGuessing/src/components/Game.js\";\n// components/Game.js\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { getRandomWord } from \"../wordBank\";\nconst Game = () => {\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [guesses, setGuesses] = useState([]); // Array of evaluated guesses\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [gameStatus, setGameStatus] = useState(\"playing\"); // \"playing\", \"won\", \"lost\"\n\n  useEffect(() => {\n    setSecretWord(getRandomWord());\n  }, []);\n\n  // Evaluate the guess against the secret word\n  const evaluateGuess = (guess, answer) => {\n    const result = [];\n    const answerArr = answer.split(\"\");\n    const guessArr = guess.split(\"\");\n    const status = Array(5).fill(\"absent\");\n    const usedIndices = Array(5).fill(false);\n\n    // First pass: mark letters in the correct position\n    guessArr.forEach((letter, index) => {\n      if (letter === answerArr[index]) {\n        status[index] = \"correct\";\n        usedIndices[index] = true;\n      }\n    });\n\n    // Second pass: mark letters that are present but in the wrong position\n    guessArr.forEach((letter, index) => {\n      if (status[index] !== \"correct\") {\n        const foundIndex = answerArr.findIndex((l, i) => l === letter && !usedIndices[i]);\n        if (foundIndex !== -1) {\n          status[index] = \"present\";\n          usedIndices[foundIndex] = true;\n        }\n      }\n    });\n    guessArr.forEach((letter, index) => {\n      result.push({\n        letter,\n        status: status[index]\n      });\n    });\n    return result;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (gameStatus !== \"playing\" || currentGuess.length !== 5) return;\n    const evaluation = evaluateGuess(currentGuess.toLowerCase(), secretWord.toLowerCase());\n    const newGuesses = [...guesses, evaluation];\n    setGuesses(newGuesses);\n    setCurrentGuess(\"\");\n    if (currentGuess.toLowerCase() === secretWord.toLowerCase()) {\n      setGameStatus(\"won\");\n    } else if (newGuesses.length === 6) {\n      setGameStatus(\"lost\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Word Guessing Game\"), /*#__PURE__*/React.createElement(Board, {\n    guesses: guesses,\n    currentGuess: currentGuess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), gameStatus === \"playing\" ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    maxLength: \"5\",\n    value: currentGuess,\n    onChange: e => setCurrentGuess(e.target.value),\n    disabled: gameStatus !== \"playing\",\n    style: {\n      textTransform: \"lowercase\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Guess\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, gameStatus === \"won\" ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Congratulations! You've guessed the word.\") : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Game Over! The word was \", secretWord, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.location.reload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Play Again\")));\n};\nexport default Game;","map":{"version":3,"names":["React","useState","useEffect","Board","getRandomWord","Game","secretWord","setSecretWord","guesses","setGuesses","currentGuess","setCurrentGuess","gameStatus","setGameStatus","evaluateGuess","guess","answer","result","answerArr","split","guessArr","status","Array","fill","usedIndices","forEach","letter","index","foundIndex","findIndex","l","i","push","handleSubmit","e","preventDefault","length","evaluation","toLowerCase","newGuesses","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","maxLength","value","onChange","target","disabled","style","textTransform","onClick","window","location","reload"],"sources":["/Users/gavinsakamoto/Projects/wordGuessing/src/components/Game.js"],"sourcesContent":["// components/Game.js\nimport React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport { getRandomWord } from \"../wordBank\";\n\nconst Game = () => {\n  const [secretWord, setSecretWord] = useState(\"\");\n  const [guesses, setGuesses] = useState([]); // Array of evaluated guesses\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [gameStatus, setGameStatus] = useState(\"playing\"); // \"playing\", \"won\", \"lost\"\n\n  useEffect(() => {\n    setSecretWord(getRandomWord());\n  }, []);\n\n  // Evaluate the guess against the secret word\n  const evaluateGuess = (guess, answer) => {\n    const result = [];\n    const answerArr = answer.split(\"\");\n    const guessArr = guess.split(\"\");\n    const status = Array(5).fill(\"absent\");\n    const usedIndices = Array(5).fill(false);\n\n    // First pass: mark letters in the correct position\n    guessArr.forEach((letter, index) => {\n      if (letter === answerArr[index]) {\n        status[index] = \"correct\";\n        usedIndices[index] = true;\n      }\n    });\n\n    // Second pass: mark letters that are present but in the wrong position\n    guessArr.forEach((letter, index) => {\n      if (status[index] !== \"correct\") {\n        const foundIndex = answerArr.findIndex(\n          (l, i) => l === letter && !usedIndices[i]\n        );\n        if (foundIndex !== -1) {\n          status[index] = \"present\";\n          usedIndices[foundIndex] = true;\n        }\n      }\n    });\n\n    guessArr.forEach((letter, index) => {\n      result.push({ letter, status: status[index] });\n    });\n    return result;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (gameStatus !== \"playing\" || currentGuess.length !== 5) return;\n\n    const evaluation = evaluateGuess(currentGuess.toLowerCase(), secretWord.toLowerCase());\n    const newGuesses = [...guesses, evaluation];\n    setGuesses(newGuesses);\n    setCurrentGuess(\"\");\n\n    if (currentGuess.toLowerCase() === secretWord.toLowerCase()) {\n      setGameStatus(\"won\");\n    } else if (newGuesses.length === 6) {\n      setGameStatus(\"lost\");\n    }\n  };\n\n  return (\n    <div className=\"game-container\">\n      <h1>Word Guessing Game</h1>\n      <Board guesses={guesses} currentGuess={currentGuess} />\n      {gameStatus === \"playing\" ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            maxLength=\"5\"\n            value={currentGuess}\n            onChange={(e) => setCurrentGuess(e.target.value)}\n            disabled={gameStatus !== \"playing\"}\n            style={{ textTransform: \"lowercase\" }}\n          />\n          <button type=\"submit\">Guess</button>\n        </form>\n      ) : (\n        <div>\n          {gameStatus === \"won\" ? (\n            <h2>Congratulations! You've guessed the word.</h2>\n          ) : (\n            <h2>Game Over! The word was {secretWord}.</h2>\n          )}\n          <button onClick={() => window.location.reload()}>Play Again</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}