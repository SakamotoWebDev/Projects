{"ast":null,"code":"var _jsxFileName = \"/Users/gavinsakamoto/Projects/wordGuessing/src/components/Board.js\";\n// components/Board.js\nimport React from \"react\";\nconst Board = ({\n  guesses,\n  currentGuess\n}) => {\n  // Create 6 rows for the game board\n  const rows = [];\n  for (let i = 0; i < 6; i++) {\n    if (i < guesses.length) {\n      rows.push(/*#__PURE__*/React.createElement(Row, {\n        key: i,\n        letters: guesses[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }\n      }));\n    } else if (i === guesses.length) {\n      // Current guess row (in-progress)\n      const letters = currentGuess.split(\"\").map(letter => ({\n        letter,\n        status: null\n      }));\n      while (letters.length < 5) {\n        letters.push({\n          letter: \"\",\n          status: null\n        });\n      }\n      rows.push(/*#__PURE__*/React.createElement(Row, {\n        key: i,\n        letters: letters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }));\n    } else {\n      // Empty rows\n      const emptyLetters = Array(5).fill({\n        letter: \"\",\n        status: null\n      });\n      rows.push(/*#__PURE__*/React.createElement(Row, {\n        key: i,\n        letters: emptyLetters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }));\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }, rows);\n};\nconst Row = ({\n  letters\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    style: {\n      display: \"flex\",\n      gap: \"5px\",\n      marginBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, letters.map((item, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: index,\n    letter: item.letter,\n    status: item.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\nconst Cell = ({\n  letter,\n  status\n}) => {\n  let backgroundColor = \"#ddd\"; // default background\n\n  if (status === \"correct\") {\n    backgroundColor = \"green\";\n  } else if (status === \"present\") {\n    backgroundColor = \"yellow\";\n  } else if (status === \"absent\") {\n    backgroundColor = \"grey\";\n  }\n  const style = {\n    width: \"50px\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor,\n    textTransform: \"uppercase\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"bold\",\n    border: \"2px solid #999\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, letter);\n};\nexport default Board;","map":{"version":3,"names":["React","Board","guesses","currentGuess","rows","i","length","push","createElement","Row","key","letters","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","split","map","letter","status","emptyLetters","Array","fill","className","style","display","gap","marginBottom","item","index","Cell","backgroundColor","width","height","justifyContent","alignItems","textTransform","fontSize","fontWeight","border"],"sources":["/Users/gavinsakamoto/Projects/wordGuessing/src/components/Board.js"],"sourcesContent":["// components/Board.js\nimport React from \"react\";\n\nconst Board = ({ guesses, currentGuess }) => {\n  // Create 6 rows for the game board\n  const rows = [];\n  for (let i = 0; i < 6; i++) {\n    if (i < guesses.length) {\n      rows.push(<Row key={i} letters={guesses[i]} />);\n    } else if (i === guesses.length) {\n      // Current guess row (in-progress)\n      const letters = currentGuess.split(\"\").map((letter) => ({ letter, status: null }));\n      while (letters.length < 5) {\n        letters.push({ letter: \"\", status: null });\n      }\n      rows.push(<Row key={i} letters={letters} />);\n    } else {\n      // Empty rows\n      const emptyLetters = Array(5).fill({ letter: \"\", status: null });\n      rows.push(<Row key={i} letters={emptyLetters} />);\n    }\n  }\n\n  return <div className=\"board\">{rows}</div>;\n};\n\nconst Row = ({ letters }) => {\n  return (\n    <div\n      className=\"board-row\"\n      style={{ display: \"flex\", gap: \"5px\", marginBottom: \"10px\" }}\n    >\n      {letters.map((item, index) => (\n        <Cell key={index} letter={item.letter} status={item.status} />\n      ))}\n    </div>\n  );\n};\n\nconst Cell = ({ letter, status }) => {\n  let backgroundColor = \"#ddd\"; // default background\n\n  if (status === \"correct\") {\n    backgroundColor = \"green\";\n  } else if (status === \"present\") {\n    backgroundColor = \"yellow\";\n  } else if (status === \"absent\") {\n    backgroundColor = \"grey\";\n  }\n\n  const style = {\n    width: \"50px\",\n    height: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor,\n    textTransform: \"uppercase\",\n    fontSize: \"1.5rem\",\n    fontWeight: \"bold\",\n    border: \"2px solid #999\"\n  };\n\n  return <div style={style}>{letter}</div>;\n};\n\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}